<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="reviewns">

<resultMap id="reviewresult"      type="review"> 
		<result property="review_no"	     column="review_no" />
		<result property="member_id"    column="member_id" />
		<result property="review_title"   column="review_title" />
		<result property="review_content"   column="review_content" />
		<result property="review_regdate"     column="review_regdate" />
		<result property="review_hit" column="review_hit" />
		<result property="review_photo" column="review_photo" />
		<result property="review_like" column="review_like" />
</resultMap> 

<!-- 리스트 출력 -->
	<select id="list" parameterType="review" resultMap="reviewresult">
		select * from (select a.*,rowNum rn from (
			select * from comm_review
		<where>
			<if test="keyword != null and search!='subcon'">
				${search} like '%'||#{keyword}||'%'
			</if>
			<if test="keyword != null and search=='subcon'">
				review_title like '%'||#{keyword}||'%' or
				review_content like '%'||#{keyword}||'%'
			</if>
		</where>			
			 order by review_no desc) a )
			where rn between #{startRow} and #{endRow}
	</select>

<!-- 글작성 -->

<!-- '아이디' 부분 나중에 수정요망!!!!!!!!!!!!! -->
<!-- '아이디' 부분 나중에 수정요망!!!!!!!!!!!!! -->

<insert id="insert" parameterType="review">
		insert into comm_review values (#{review_no},#{member_id},#{review_title},
		#{review_content},sysdate,0,'photo_path',0)

</insert>

<!-- 글번호 증가 -->
	<select id="getMaxNum" resultType="int">
		select nvl(max(review_no),0) + 1 from comm_review
	</select>

<!-- 목록 검색기능 -->	
<select id="getTotal" parameterType="review" resultType="int">
		select count(*) from comm_review
		<where>
			<if test="keyword != null and search !='subcon'">
				${search} like '%'||#{keyword}||'%'
			</if>
			<if test="keyword != null and search=='subcon'">
				review_title like '%'||#{keyword}||'%' or
				review_content like '%'||#{keyword}||'%'
			</if>
		</where>
	</select>
	
<!-- review_no로 유효성검사 -->
	<select id="select" parameterType="int" resultType="review">
		select * from comm_review where review_no=#{review_no}
	</select>
	
<!-- 조회수증가 -->
	<update id="selectUpdate" parameterType="int">
		update comm_review set review_hit = review_hit+1 where review_no=#{review_no}
	</update>
	
<!-- 수정 -->	
	<update id="update" parameterType="review">
		update comm_review set review_title=#{review_title},
			review_content=#{review_content}
			where review_no=#{review_no}
	</update>
	
<!-- 삭제 -->	
	<update id="delete" parameterType="int">
		delete from comm_review where review_no=#{review_no}
	</update>
	
	<!-- 좋아요 -->
	<update id="like" parameterType="review">
		update comm_review set review_like=review_like+1 where review_no=#{review_no}
	</update>
	
<!-- 메인에 최근 1~10개 데이터 호출 -->	
<select id="review1" parameterType="review" resultType="review">
 select * from (select * from comm_review order by review_regdate desc) where rownum &lt;= 10 
</select>

<!-- 메인에 최근 11~20개 데이터 호출 -->	
<select id="review2" resultType="review">
	select * from ( select rownum rnum, review.* from (
    select  * from comm_review order by review_regdate desc) review )
    where rnum between 11 and 20
</select>	
	
</mapper>
